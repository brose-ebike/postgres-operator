---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: pgdatabases.postgres.brose.bike
spec:
  group: postgres.brose.bike
  names:
    kind: PgDatabase
    listKind: PgDatabaseList
    plural: pgdatabases
    singular: pgdatabase
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: PgDatabase is the Schema for the pgdatabases API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PgDatabaseSpec defines the desired state of PgDatabase
            properties:
              defaultPrivileges:
                description: DefaultPrivileges defines the default privileges for
                  this database
                items:
                  properties:
                    functionPrivileges:
                      description: FunctionPrivileges specifies the name of the privileges
                        on tables which should be granted to the roles
                      items:
                        type: string
                      type: array
                    name:
                      description: Name specifies the name of the schema for which
                        the default privileges should be granted.
                      type: string
                    roles:
                      description: Roles specifies the name of the roles for which
                        the privileges should be granted
                      items:
                        type: string
                      type: array
                    routinePrivileges:
                      description: RoutinePrivileges specifies the name of the privileges
                        on tables which should be granted to the roles
                      items:
                        type: string
                      type: array
                    sequencePrivileges:
                      description: SequencePrivileges specifies the name of the privileges
                        on tables which should be granted to the roles
                      items:
                        type: string
                      type: array
                    tablePrivileges:
                      description: TablePrivileges specifies the name of the privileges
                        on tables which should be granted to the roles
                      items:
                        type: string
                      type: array
                    typePrivileges:
                      description: TypePrivileges specifies the name of the privileges
                        on tables which should be granted to the roles
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  - roles
                  type: object
                type: array
              deletion:
                description: DeletionBehavior specifies what should happen when the
                  manifest gets deleted
                properties:
                  drop:
                    description: Drop specifies if the database should be dropped
                      on deletion (defaults to false)
                    type: boolean
                  wait:
                    description: Wait specifies if the finalizer should wait for the
                      database to be deleted manually
                    type: boolean
                type: object
              instance:
                description: Instance identifies the PgInstanceConnection which should
                  be used
                properties:
                  name:
                    description: Name identifies the PgInstanceConnection which should
                      be used
                    type: string
                  namespace:
                    description: Namespace defines the namespace in which the PgInstanceConnection
                      is located
                    type: string
                required:
                - name
                - namespace
                type: object
              publicPrivileges:
                description: PublicPrivileges revokes and Public stuff in postgres
                properties:
                  revoke:
                    description: Revoke the public privileges from all database object
                    type: boolean
                required:
                - revoke
                type: object
              publicSchema:
                description: PublicSchema dropped
                properties:
                  drop:
                    description: Revoke the public privileges from all database object
                    type: boolean
                required:
                - drop
                type: object
            required:
            - defaultPrivileges
            - deletion
            - instance
            - publicPrivileges
            - publicSchema
            type: object
          status:
            description: PgDatabaseStatus defines the observed state of PgDatabase
            properties:
              conditions:
                description: Conditions represent the current connection state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
