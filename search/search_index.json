{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Postgres Controller","title":"Home"},{"location":"#postgres-controller","text":"","title":"Postgres Controller"},{"location":"configuration/","text":"","title":"Configuration"},{"location":"contribution/","text":"Contribution Contributors The list of all Contributors can be found on Github . General Star the project on Github and help spread the word :) Post an issue if you find any bugs Contribute improvements or fixes using a Pull Request . If you're going to contribute, thank you! Please just be sure to: discuss with the authors on an issue ticket prior to doing anything big. follow the style, naming and structure conventions of the rest of the project. make commits atomic and easy to merge. verify all tests are passing. Build the project with make build and make tests run to do this. How it works This project aims to follow the Kubernetes Operator pattern It uses Controllers which provides a reconcile function responsible for synchronizing resources until the desired state is reached on the cluster Development Tools The Project was created with the Operator SDK The create resources use operator-sdk create api --group=postgres --version=v1 --kind=Pg<ResourceName> To build, test and run the project use make The go compiler is needed to build the controller The following tools can be installed using make: To install kustomize run make kustomize To install controller-gen run make controller-gen To install envtest run make envtest To install opm run make opm Test It Out Getting Started You\u2019ll need a Kubernetes cluster to run against. You can use KIND to get a local cluster for testing, or run against a remote cluster. Note: Your controller will automatically use the current context in your kubeconfig file (i.e. whatever cluster kubectl cluster-info shows). Running on the cluster Install the CRDs into the cluster: make install Install Instances of Custom Resources: kubectl apply -f config/samples/ Build and push your image to the location specified by IMG : make docker-build docker-push IMG = <some-registry>/postgres-controller:tag Deploy the controller to the cluster with the image specified by IMG : make deploy IMG = <some-registry>/postgres-controller:tag Running locally Run your controller (this will run in the foreground, so switch to a new terminal if you want to leave it running): make run NOTE: You can also run this in one step by running: make install run Uninstall CRDs To delete the CRDs from the cluster: make uninstall Undeploy controller UnDeploy the controller to the cluster: make undeploy Modifying the API definitions If you are editing the API definitions, generate the manifests such as CRs or CRDs using: make manifests NOTE: Run make --help for more information on all potential make targets More information can be found via the Kubebuilder Documentation","title":"Contribution"},{"location":"contribution/#contribution","text":"","title":"Contribution"},{"location":"contribution/#contributors","text":"The list of all Contributors can be found on Github .","title":"Contributors"},{"location":"contribution/#general","text":"Star the project on Github and help spread the word :) Post an issue if you find any bugs Contribute improvements or fixes using a Pull Request . If you're going to contribute, thank you! Please just be sure to: discuss with the authors on an issue ticket prior to doing anything big. follow the style, naming and structure conventions of the rest of the project. make commits atomic and easy to merge. verify all tests are passing. Build the project with make build and make tests run to do this.","title":"General"},{"location":"contribution/#how-it-works","text":"This project aims to follow the Kubernetes Operator pattern It uses Controllers which provides a reconcile function responsible for synchronizing resources until the desired state is reached on the cluster","title":"How it works"},{"location":"contribution/#development-tools","text":"The Project was created with the Operator SDK The create resources use operator-sdk create api --group=postgres --version=v1 --kind=Pg<ResourceName> To build, test and run the project use make The go compiler is needed to build the controller The following tools can be installed using make: To install kustomize run make kustomize To install controller-gen run make controller-gen To install envtest run make envtest To install opm run make opm","title":"Development Tools"},{"location":"contribution/#test-it-out","text":"","title":"Test It Out"},{"location":"contribution/#getting-started","text":"You\u2019ll need a Kubernetes cluster to run against. You can use KIND to get a local cluster for testing, or run against a remote cluster. Note: Your controller will automatically use the current context in your kubeconfig file (i.e. whatever cluster kubectl cluster-info shows).","title":"Getting Started"},{"location":"contribution/#running-on-the-cluster","text":"Install the CRDs into the cluster: make install Install Instances of Custom Resources: kubectl apply -f config/samples/ Build and push your image to the location specified by IMG : make docker-build docker-push IMG = <some-registry>/postgres-controller:tag Deploy the controller to the cluster with the image specified by IMG : make deploy IMG = <some-registry>/postgres-controller:tag","title":"Running on the cluster"},{"location":"contribution/#running-locally","text":"Run your controller (this will run in the foreground, so switch to a new terminal if you want to leave it running): make run NOTE: You can also run this in one step by running: make install run","title":"Running locally"},{"location":"contribution/#uninstall-crds","text":"To delete the CRDs from the cluster: make uninstall","title":"Uninstall CRDs"},{"location":"contribution/#undeploy-controller","text":"UnDeploy the controller to the cluster: make undeploy","title":"Undeploy controller"},{"location":"contribution/#modifying-the-api-definitions","text":"If you are editing the API definitions, generate the manifests such as CRs or CRDs using: make manifests NOTE: Run make --help for more information on all potential make targets More information can be found via the Kubebuilder Documentation","title":"Modifying the API definitions"},{"location":"installation/","text":"","title":"Installation"},{"location":"usage/database/","text":"","title":"Create Database"},{"location":"usage/instance/","text":"","title":"Create Instance"},{"location":"usage/login_role/","text":"","title":"Create LoginRole"}]}